# Phase 2: アーキテクチャ設計フェーズ チェックリスト
# このチェックリストはアーキテクチャ設計フェーズで確認すべき項目をまとめたものです

metadata:
  name: "アーキテクチャ設計フェーズ チェックリスト"
  version: "1.0.0"
  description: "新機能開発のアーキテクチャ設計フェーズで使用するチェックリスト"
  created_at: "2024-01-01"
  phase: "architecture"
  tags:
    - architecture
    - phase2
    - system-design

categories:
  - name: "アーキテクチャ概要"
    id: arch_overview
    description: "システム全体構成の確認"
    items:
      - id: arch_001
        question: "システム構成図は作成されていますか？"
        severity: critical
        hint: "コンポーネント間の関係が視覚的に理解できる図"
        
      - id: arch_002
        question: "アーキテクチャパターン（レイヤード、マイクロサービス等）は明確ですか？"
        severity: high
        hint: "採用するアーキテクチャスタイルとその理由"
        
      - id: arch_003
        question: "設計原則は定義されていますか？"
        severity: high
        hint: "SOLID原則、DRY、KISS等の適用方針"
        
      - id: arch_004
        question: "技術スタックの選定理由は明確ですか？"
        severity: medium
        hint: "なぜその技術を選んだのかの根拠"

  - name: "コンポーネント設計"
    id: component_design
    description: "個別コンポーネントの設計確認"
    items:
      - id: comp_001
        question: "各コンポーネントの責務は単一責任の原則に従っていますか？"
        severity: high
        hint: "1つのコンポーネントが複数の責務を持っていないか"
        
      - id: comp_002
        question: "コンポーネント間のインターフェースは明確に定義されていますか？"
        severity: critical
        hint: "API、メッセージ形式、プロトコルなど"
        
      - id: comp_003
        question: "コンポーネント間の依存関係は適切ですか？"
        severity: high
        hint: "循環依存がない、疎結合になっている"
        
      - id: comp_004
        question: "各コンポーネントの配置（デプロイ先）は明確ですか？"
        severity: medium
        hint: "サーバー、コンテナ、サーバーレスなど"

  - name: "データ設計"
    id: data_design
    description: "データモデルとデータフローの確認"
    items:
      - id: data_001
        question: "データモデル（ER図、スキーマ定義等）は作成されていますか？"
        severity: critical
        hint: "エンティティ、属性、関係性の定義"
        
      - id: data_002
        question: "データの永続化戦略は明確ですか？"
        severity: high
        hint: "使用するデータベース、ストレージの選定理由"
        
      - id: data_003
        question: "データフローは図示されていますか？"
        severity: high
        hint: "データがどのように流れるかの可視化"
        
      - id: data_004
        question: "データの整合性を保つ仕組みは設計されていますか？"
        severity: high
        hint: "トランザクション、イベントソーシング等"
        
      - id: data_005
        question: "データのライフサイクル（作成、更新、削除、アーカイブ）は考慮されていますか？"
        severity: medium
        hint: "データ保持期間、削除ポリシー等"

  - name: "API設計"
    id: api_design
    description: "APIインターフェースの設計確認"
    items:
      - id: api_001
        question: "APIエンドポイントの一覧は作成されていますか？"
        severity: high
        hint: "リソース、メソッド、パスの定義"
        
      - id: api_002
        question: "API仕様書（OpenAPI等）は作成されていますか？"
        severity: high
        hint: "リクエスト/レスポンス形式の詳細定義"
        
      - id: api_003
        question: "RESTful原則またはGraphQL等の設計指針に従っていますか？"
        severity: medium
        hint: "一貫性のあるAPI設計"
        
      - id: api_004
        question: "エラーハンドリングの方針は定義されていますか？"
        severity: high
        hint: "エラーコード、メッセージ形式の統一"
        
      - id: api_005
        question: "APIバージョニング戦略は定義されていますか？"
        severity: medium
        hint: "後方互換性の維持方法"

  - name: "セキュリティ設計"
    id: security_design
    description: "セキュリティアーキテクチャの確認"
    items:
      - id: sec_001
        question: "認証・認可の仕組みは設計されていますか？"
        severity: critical
        hint: "OAuth、JWT、RBAC等の採用"
        
      - id: sec_002
        question: "データの暗号化方針は定義されていますか？"
        severity: critical
        hint: "保存時、転送時の暗号化"
        
      - id: sec_003
        question: "セキュリティ境界は明確に定義されていますか？"
        severity: high
        hint: "信頼境界、DMZ、ファイアウォール配置"
        
      - id: sec_004
        question: "監査ログの設計は含まれていますか？"
        severity: high
        hint: "誰が、いつ、何をしたかの記録"
        
      - id: sec_005
        question: "脆弱性対策（OWASP Top 10等）は考慮されていますか？"
        severity: high
        hint: "一般的な脆弱性への対策"

  - name: "性能・拡張性"
    id: performance_scalability
    description: "性能要件と拡張性の確認"
    items:
      - id: perf_001
        question: "性能目標に対するアーキテクチャ上の考慮はありますか？"
        severity: high
        hint: "キャッシュ、非同期処理、並列処理等"
        
      - id: perf_002
        question: "スケーリング戦略（垂直/水平）は定義されていますか？"
        severity: high
        hint: "負荷増大時の対応方針"
        
      - id: perf_003
        question: "ボトルネックになりうる箇所は特定されていますか？"
        severity: medium
        hint: "性能上のリスク箇所の把握"
        
      - id: perf_004
        question: "キャッシュ戦略は設計されていますか？"
        severity: medium
        hint: "どこで、何を、どのくらいキャッシュするか"

  - name: "運用・保守性"
    id: operations
    description: "運用面での設計確認"
    items:
      - id: ops_001
        question: "ログ設計（何を、どこに、どの程度）は定義されていますか？"
        severity: high
        hint: "ログレベル、出力先、保持期間"
        
      - id: ops_002
        question: "監視・アラートの設計は含まれていますか？"
        severity: high
        hint: "メトリクス、閾値、通知方法"
        
      - id: ops_003
        question: "障害時の復旧手順は考慮されていますか？"
        severity: high
        hint: "フェイルオーバー、バックアップ、復元"
        
      - id: ops_004
        question: "設定の外部化は考慮されていますか？"
        severity: medium
        hint: "環境変数、設定ファイル、設定サービス"

  - name: "統合・移行"
    id: integration_migration
    description: "既存システムとの統合確認"
    items:
      - id: intg_001
        question: "既存システムとの統合点は明確ですか？"
        severity: high
        hint: "API、データベース、ファイル連携等"
        
      - id: intg_002
        question: "データ移行が必要な場合、移行計画は設計されていますか？"
        severity: high
        hint: "移行手順、ロールバック計画"
        
      - id: intg_003
        question: "後方互換性の維持方針は定義されていますか？"
        severity: medium
        hint: "既存機能への影響評価"

# 自動チェック可能な項目
automated_checks:
  - id: auto_arch_001
    type: "diagram_exists"
    target: "システム構成図"
    message: "システム構成図が含まれていません"
    
  - id: auto_arch_002
    type: "section_exists"
    target: "コンポーネント設計"
    message: "コンポーネント設計セクションが存在しません"
    
  - id: auto_arch_003
    type: "api_spec_exists"
    target: "API仕様"
    message: "API仕様の定義が見つかりません"