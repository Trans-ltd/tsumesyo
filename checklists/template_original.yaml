# チェックリストテンプレート
metadata:
  version: "1.0.0"
  description: "AI開発コラボレーション用品質チェックリスト"
  tags: ["quality", "development", "ai-collaboration"]

categories:
  - name: "要件理解"
    id: requirements
    description: "実装が要件を満たしているか確認"
    items:
      - id: req_001
        question: "ユーザーの要求を正しく理解していますか？"
        severity: critical
        hint: "元の要求内容と実装内容を照合"
        
      - id: req_002
        question: "エッジケースは考慮されていますか？"
        severity: medium
        hint: "空の入力、異常な値、境界値などを確認"
        
      - id: req_003
        question: "必要な機能がすべて実装されていますか？"
        severity: high
        hint: "要求された機能のリストと照合"

  - name: "コード品質"
    id: code_quality
    description: "コードの品質と保守性の確認"
    items:
      - id: code_001
        question: "コーディング規約に従っていますか？"
        severity: medium
        hint: "インデント、命名規則、コメント形式"
        
      - id: code_002
        question: "エラーハンドリングは適切ですか？"
        severity: high
        hint: "例外処理、エラー戻り値の確認"
        
      - id: code_003
        question: "コードは読みやすく理解しやすいですか？"
        severity: medium
        hint: "複雑度、関数の長さ、変数名の明確さ"
        
      - id: code_004
        question: "重複コードは避けられていますか？"
        severity: low
        hint: "DRY原則の遵守"

  - name: "セキュリティ"
    id: security
    description: "セキュリティ脆弱性の確認"
    items:
      - id: sec_001
        question: "入力値の検証は行われていますか？"
        severity: critical
        hint: "SQLインジェクション、XSS対策"
        
      - id: sec_002
        question: "機密情報は適切に保護されていますか？"
        severity: critical
        hint: "パスワード、APIキーの扱い"
        
      - id: sec_003
        question: "アクセス制御は適切ですか？"
        severity: high
        hint: "認証・認可の実装"

  - name: "テスト"
    id: testing
    description: "テストの網羅性と品質"
    items:
      - id: test_001
        question: "単体テストは作成されていますか？"
        severity: high
        hint: "主要な関数・メソッドのテスト"
        
      - id: test_002
        question: "エッジケースのテストはありますか？"
        severity: medium
        hint: "境界値、異常系のテスト"
        
      - id: test_003
        question: "テストは実行され、パスしていますか？"
        severity: critical
        hint: "CI/CDでの自動実行"

  - name: "パフォーマンス"
    id: performance
    description: "パフォーマンスの最適化"
    items:
      - id: perf_001
        question: "パフォーマンスのボトルネックは特定されていますか？"
        severity: medium
        hint: "プロファイリング結果の確認"
        
      - id: perf_002
        question: "不要な処理や重い処理は避けられていますか？"
        severity: medium
        hint: "ループ内での重い処理、N+1問題"
        
      - id: perf_003
        question: "リソースの使用は適切ですか？"
        severity: high
        hint: "メモリリーク、接続の解放"

  - name: "ドキュメント"
    id: documentation
    description: "ドキュメントの完成度"
    items:
      - id: doc_001
        question: "READMEは更新されていますか？"
        severity: low
        hint: "新機能の説明、使用方法"
        
      - id: doc_002
        question: "複雑な処理には説明コメントがありますか？"
        severity: medium
        hint: "アルゴリズム、ビジネスロジックの説明"

# オプション：自動チェック可能な項目
automated_checks:
  - id: auto_001
    type: "file_exists"
    target: "README.md"
    message: "READMEファイルが存在しません"
    
  - id: auto_002
    type: "pattern_found"
    pattern: "console\\.log|debugger"
    file_pattern: "*.js"
    message: "デバッグコードが残っています"
    
  - id: auto_003
    type: "pattern_not_found"
    pattern: "TODO|FIXME|XXX"
    file_pattern: "*"
    message: "未完了のTODOコメントがあります"